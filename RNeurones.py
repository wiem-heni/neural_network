# -*- coding: utf-8 -*-
"""RN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14ImW_N8mM794hWMdyo2Y1jvT73thGyGn
"""

import pandas as pd
from google.colab import files as colab
upload_file = colab.upload()
dt = pd.read_csv('Iris.csv')

dt.head(10)

dt.shape

import seaborn as sb
sb.pairplot(data=dt, vars=('SepalWidthCm', 'PetalLengthCm'), hue='Species')

sp_names = ['Iris-setosa', 'Iris-versicolor', 'Iris-virginica']
cols = dt[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]
re = dt[['Species']].replace(sp_names, [0, 1, 2])
data = pd.concat([cols, re], axis = 1)

data.head(10)

from sklearn import model_selection
training_set, testing_set = model_selection.train_test_split(data, train_size=0.7, test_size=0.3)
train_x = training_set[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]
train_y = training_set.Species
test_x = testing_set[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]
test_y = testing_set.Species

train_x.head(10)

train_y.head(10)

test_x.head(10)

test_y.head(10)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# from sklearn.neural_network import MLPClassifier
# mlp_class = MLPClassifier(solver='lbfgs', hidden_layer_sizes=(3,3), epsilon=0.07, max_iter=150)
# mlp_class.fit(train_x, train_y)

from sklearn import metrics
metrics.accuracy_score(mlp_class.predict(test_x), test_y)

pip install pretty-confusion-matrix

from pretty_confusion_matrix import pp_matrix_from_data
pp_matrix_from_data(test_y.values, mlp_class.predict(test_x))

import matplotlib.pyplot as plt
mlp_cl = MLPClassifier(solver= "sgd", learning_rate_init= 0.7, max_iter=150)
mlp_cl.fit(train_x, train_y)
plt.plot(mlp_cl.loss_curve_)
plt.show()